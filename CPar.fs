// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 26 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | PLUSPLUS
  | MINUSMINUS
  | PLUSASSIGN
  | MINUSASSIGN
  | TIMESASSIGN
  | DIVASSIGN
  | MODASSIGN
  | PLUSPLUSPLUS
  | QUES
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | DO
  | FLOAT
  | SWITCH
  | CASE
  | FOR
  | DEFAULT
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTCHAR of (char)
  | CSTFLOAT of (float32)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_PLUSPLUS
    | TOKEN_MINUSMINUS
    | TOKEN_PLUSASSIGN
    | TOKEN_MINUSASSIGN
    | TOKEN_TIMESASSIGN
    | TOKEN_DIVASSIGN
    | TOKEN_MODASSIGN
    | TOKEN_PLUSPLUSPLUS
    | TOKEN_QUES
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_DO
    | TOKEN_FLOAT
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_FOR
    | TOKEN_DEFAULT
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTCHAR
    | TOKEN_CSTFLOAT
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssignment
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExecCase
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstFloat
    | NONTERM_Type
    | NONTERM_ConstChar
    | NONTERM_ConstString
    | NONTERM_StmtCase

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | NOT  -> 12 
  | SEQOR  -> 13 
  | SEQAND  -> 14 
  | EQ  -> 15 
  | NE  -> 16 
  | GT  -> 17 
  | LT  -> 18 
  | GE  -> 19 
  | LE  -> 20 
  | PLUS  -> 21 
  | MINUS  -> 22 
  | TIMES  -> 23 
  | DIV  -> 24 
  | MOD  -> 25 
  | PLUSPLUS  -> 26 
  | MINUSMINUS  -> 27 
  | PLUSASSIGN  -> 28 
  | MINUSASSIGN  -> 29 
  | TIMESASSIGN  -> 30 
  | DIVASSIGN  -> 31 
  | MODASSIGN  -> 32 
  | PLUSPLUSPLUS  -> 33 
  | QUES  -> 34 
  | CHAR  -> 35 
  | ELSE  -> 36 
  | IF  -> 37 
  | INT  -> 38 
  | NULL  -> 39 
  | PRINT  -> 40 
  | PRINTLN  -> 41 
  | RETURN  -> 42 
  | VOID  -> 43 
  | WHILE  -> 44 
  | DO  -> 45 
  | FLOAT  -> 46 
  | SWITCH  -> 47 
  | CASE  -> 48 
  | FOR  -> 49 
  | DEFAULT  -> 50 
  | CSTSTRING _ -> 51 
  | NAME _ -> 52 
  | CSTCHAR _ -> 53 
  | CSTFLOAT _ -> 54 
  | CSTINT _ -> 55 
  | CSTBOOL _ -> 56 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_NOT 
  | 13 -> TOKEN_SEQOR 
  | 14 -> TOKEN_SEQAND 
  | 15 -> TOKEN_EQ 
  | 16 -> TOKEN_NE 
  | 17 -> TOKEN_GT 
  | 18 -> TOKEN_LT 
  | 19 -> TOKEN_GE 
  | 20 -> TOKEN_LE 
  | 21 -> TOKEN_PLUS 
  | 22 -> TOKEN_MINUS 
  | 23 -> TOKEN_TIMES 
  | 24 -> TOKEN_DIV 
  | 25 -> TOKEN_MOD 
  | 26 -> TOKEN_PLUSPLUS 
  | 27 -> TOKEN_MINUSMINUS 
  | 28 -> TOKEN_PLUSASSIGN 
  | 29 -> TOKEN_MINUSASSIGN 
  | 30 -> TOKEN_TIMESASSIGN 
  | 31 -> TOKEN_DIVASSIGN 
  | 32 -> TOKEN_MODASSIGN 
  | 33 -> TOKEN_PLUSPLUSPLUS 
  | 34 -> TOKEN_QUES 
  | 35 -> TOKEN_CHAR 
  | 36 -> TOKEN_ELSE 
  | 37 -> TOKEN_IF 
  | 38 -> TOKEN_INT 
  | 39 -> TOKEN_NULL 
  | 40 -> TOKEN_PRINT 
  | 41 -> TOKEN_PRINTLN 
  | 42 -> TOKEN_RETURN 
  | 43 -> TOKEN_VOID 
  | 44 -> TOKEN_WHILE 
  | 45 -> TOKEN_DO 
  | 46 -> TOKEN_FLOAT 
  | 47 -> TOKEN_SWITCH 
  | 48 -> TOKEN_CASE 
  | 49 -> TOKEN_FOR 
  | 50 -> TOKEN_DEFAULT 
  | 51 -> TOKEN_CSTSTRING 
  | 52 -> TOKEN_NAME 
  | 53 -> TOKEN_CSTCHAR 
  | 54 -> TOKEN_CSTFLOAT 
  | 55 -> TOKEN_CSTINT 
  | 56 -> TOKEN_CSTBOOL 
  | 59 -> TOKEN_end_of_input
  | 57 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VardecAndAssignment 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_ExecCase 
    | 42 -> NONTERM_ExecCase 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_ExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_AtExprNotAccess 
    | 76 -> NONTERM_AtExprNotAccess 
    | 77 -> NONTERM_AtExprNotAccess 
    | 78 -> NONTERM_AtExprNotAccess 
    | 79 -> NONTERM_AtExprNotAccess 
    | 80 -> NONTERM_Access 
    | 81 -> NONTERM_Access 
    | 82 -> NONTERM_Access 
    | 83 -> NONTERM_Access 
    | 84 -> NONTERM_Access 
    | 85 -> NONTERM_Exprs 
    | 86 -> NONTERM_Exprs 
    | 87 -> NONTERM_Exprs1 
    | 88 -> NONTERM_Exprs1 
    | 89 -> NONTERM_Const 
    | 90 -> NONTERM_Const 
    | 91 -> NONTERM_Const 
    | 92 -> NONTERM_Const 
    | 93 -> NONTERM_ConstFloat 
    | 94 -> NONTERM_ConstFloat 
    | 95 -> NONTERM_Type 
    | 96 -> NONTERM_Type 
    | 97 -> NONTERM_Type 
    | 98 -> NONTERM_ConstChar 
    | 99 -> NONTERM_ConstString 
    | 100 -> NONTERM_StmtCase 
    | 101 -> NONTERM_StmtCase 
    | 102 -> NONTERM_StmtCase 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 59 
let _fsyacc_tagOfErrorTerminal = 57

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | PLUSPLUS  -> "PLUSPLUS" 
  | MINUSMINUS  -> "MINUSMINUS" 
  | PLUSASSIGN  -> "PLUSASSIGN" 
  | MINUSASSIGN  -> "MINUSASSIGN" 
  | TIMESASSIGN  -> "TIMESASSIGN" 
  | DIVASSIGN  -> "DIVASSIGN" 
  | MODASSIGN  -> "MODASSIGN" 
  | PLUSPLUSPLUS  -> "PLUSPLUSPLUS" 
  | QUES  -> "QUES" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | DO  -> "DO" 
  | FLOAT  -> "FLOAT" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | FOR  -> "FOR" 
  | DEFAULT  -> "DEFAULT" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | PLUSPLUS  -> (null : System.Object) 
  | MINUSMINUS  -> (null : System.Object) 
  | PLUSASSIGN  -> (null : System.Object) 
  | MINUSASSIGN  -> (null : System.Object) 
  | TIMESASSIGN  -> (null : System.Object) 
  | DIVASSIGN  -> (null : System.Object) 
  | MODASSIGN  -> (null : System.Object) 
  | PLUSPLUSPLUS  -> (null : System.Object) 
  | QUES  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 15us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 82us; 63us; 83us; 63us; 85us; 63us; 105us; 63us; 116us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 108us; 13us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 85us; 86us; 105us; 106us; 116us; 117us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 107us; 83us; 109us; 54us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 78us; 81us; 79us; 80us; 82us; 57us; 83us; 57us; 85us; 57us; 88us; 89us; 92us; 93us; 99us; 100us; 101us; 102us; 103us; 104us; 105us; 57us; 116us; 57us; 120us; 121us; 123us; 158us; 126us; 127us; 128us; 129us; 130us; 155us; 132us; 133us; 159us; 136us; 160us; 137us; 161us; 138us; 162us; 139us; 163us; 140us; 164us; 141us; 165us; 142us; 166us; 143us; 167us; 144us; 168us; 145us; 169us; 146us; 170us; 147us; 171us; 148us; 179us; 149us; 180us; 150us; 181us; 151us; 182us; 152us; 183us; 153us; 184us; 154us; 185us; 156us; 187us; 155us; 188us; 155us; 202us; 157us; 205us; 158us; 2us; 65535us; 95us; 96us; 117us; 118us; 54us; 65535us; 16us; 112us; 43us; 112us; 46us; 112us; 49us; 112us; 52us; 112us; 59us; 112us; 66us; 112us; 67us; 112us; 70us; 112us; 71us; 112us; 73us; 112us; 74us; 112us; 78us; 112us; 79us; 112us; 82us; 112us; 83us; 112us; 85us; 112us; 88us; 112us; 92us; 112us; 99us; 112us; 101us; 112us; 103us; 112us; 105us; 112us; 116us; 112us; 120us; 112us; 123us; 112us; 126us; 112us; 128us; 112us; 130us; 113us; 132us; 112us; 159us; 112us; 160us; 112us; 161us; 112us; 162us; 112us; 163us; 112us; 164us; 112us; 165us; 112us; 166us; 112us; 167us; 112us; 168us; 112us; 169us; 112us; 170us; 112us; 171us; 112us; 179us; 112us; 180us; 112us; 181us; 112us; 182us; 112us; 183us; 112us; 184us; 112us; 185us; 112us; 187us; 113us; 188us; 113us; 202us; 112us; 205us; 112us; 56us; 65535us; 16us; 119us; 43us; 119us; 46us; 119us; 49us; 119us; 52us; 119us; 59us; 119us; 66us; 119us; 67us; 119us; 70us; 119us; 71us; 119us; 73us; 119us; 74us; 119us; 78us; 119us; 79us; 119us; 82us; 119us; 83us; 119us; 85us; 119us; 88us; 119us; 92us; 119us; 99us; 119us; 101us; 119us; 103us; 119us; 105us; 119us; 114us; 115us; 116us; 119us; 120us; 119us; 123us; 119us; 126us; 119us; 128us; 119us; 130us; 119us; 132us; 119us; 159us; 119us; 160us; 119us; 161us; 119us; 162us; 119us; 163us; 119us; 164us; 119us; 165us; 119us; 166us; 119us; 167us; 119us; 168us; 119us; 169us; 119us; 170us; 119us; 171us; 119us; 179us; 119us; 180us; 119us; 181us; 119us; 182us; 119us; 183us; 119us; 184us; 119us; 185us; 119us; 187us; 119us; 188us; 119us; 199us; 201us; 202us; 119us; 205us; 119us; 59us; 65535us; 16us; 111us; 43us; 111us; 46us; 111us; 49us; 111us; 52us; 111us; 59us; 111us; 66us; 111us; 67us; 111us; 70us; 111us; 71us; 111us; 73us; 111us; 74us; 111us; 78us; 111us; 79us; 111us; 82us; 111us; 83us; 111us; 85us; 111us; 88us; 111us; 92us; 111us; 99us; 111us; 101us; 111us; 103us; 111us; 105us; 111us; 116us; 111us; 120us; 111us; 123us; 111us; 126us; 111us; 128us; 111us; 130us; 110us; 132us; 111us; 159us; 111us; 160us; 111us; 161us; 111us; 162us; 111us; 163us; 111us; 164us; 111us; 165us; 111us; 166us; 111us; 167us; 111us; 168us; 111us; 169us; 111us; 170us; 111us; 171us; 111us; 175us; 176us; 177us; 178us; 179us; 111us; 180us; 111us; 181us; 111us; 182us; 111us; 183us; 111us; 184us; 111us; 185us; 111us; 187us; 111us; 188us; 110us; 190us; 191us; 196us; 197us; 199us; 200us; 202us; 111us; 205us; 111us; 1us; 65535us; 123us; 124us; 2us; 65535us; 123us; 204us; 205us; 206us; 56us; 65535us; 16us; 186us; 43us; 186us; 46us; 186us; 49us; 186us; 52us; 186us; 59us; 186us; 66us; 186us; 67us; 186us; 70us; 186us; 71us; 186us; 73us; 186us; 74us; 186us; 78us; 186us; 79us; 186us; 82us; 186us; 83us; 186us; 85us; 186us; 88us; 186us; 92us; 186us; 99us; 186us; 101us; 186us; 103us; 186us; 105us; 186us; 114us; 186us; 116us; 186us; 120us; 186us; 123us; 186us; 126us; 186us; 128us; 186us; 130us; 186us; 132us; 186us; 159us; 186us; 160us; 186us; 161us; 186us; 162us; 186us; 163us; 186us; 164us; 186us; 165us; 186us; 166us; 186us; 167us; 186us; 168us; 186us; 169us; 186us; 170us; 186us; 171us; 186us; 179us; 186us; 180us; 186us; 181us; 186us; 182us; 186us; 183us; 186us; 184us; 186us; 185us; 186us; 187us; 186us; 188us; 186us; 199us; 186us; 202us; 186us; 205us; 186us; 56us; 65535us; 16us; 192us; 43us; 192us; 46us; 192us; 49us; 192us; 52us; 192us; 59us; 192us; 66us; 192us; 67us; 192us; 70us; 192us; 71us; 192us; 73us; 192us; 74us; 192us; 78us; 192us; 79us; 192us; 82us; 192us; 83us; 192us; 85us; 192us; 88us; 192us; 92us; 192us; 99us; 192us; 101us; 192us; 103us; 192us; 105us; 192us; 114us; 192us; 116us; 192us; 120us; 192us; 123us; 192us; 126us; 192us; 128us; 192us; 130us; 192us; 132us; 192us; 159us; 192us; 160us; 192us; 161us; 192us; 162us; 192us; 163us; 192us; 164us; 192us; 165us; 192us; 166us; 192us; 167us; 192us; 168us; 192us; 169us; 192us; 170us; 192us; 171us; 192us; 179us; 192us; 180us; 192us; 181us; 192us; 182us; 192us; 183us; 192us; 184us; 192us; 185us; 192us; 187us; 192us; 188us; 192us; 199us; 192us; 202us; 192us; 205us; 192us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; 56us; 65535us; 16us; 194us; 43us; 194us; 46us; 194us; 49us; 194us; 52us; 194us; 59us; 194us; 66us; 194us; 67us; 194us; 70us; 194us; 71us; 194us; 73us; 194us; 74us; 194us; 78us; 194us; 79us; 194us; 82us; 194us; 83us; 194us; 85us; 194us; 88us; 194us; 92us; 194us; 99us; 194us; 101us; 194us; 103us; 194us; 105us; 194us; 114us; 194us; 116us; 194us; 120us; 194us; 123us; 194us; 126us; 194us; 128us; 194us; 130us; 194us; 132us; 194us; 159us; 194us; 160us; 194us; 161us; 194us; 162us; 194us; 163us; 194us; 164us; 194us; 165us; 194us; 166us; 194us; 167us; 194us; 168us; 194us; 169us; 194us; 170us; 194us; 171us; 194us; 179us; 194us; 180us; 194us; 181us; 194us; 182us; 194us; 183us; 194us; 184us; 194us; 185us; 194us; 187us; 194us; 188us; 194us; 199us; 194us; 202us; 194us; 205us; 194us; 56us; 65535us; 16us; 193us; 43us; 193us; 46us; 193us; 49us; 193us; 52us; 193us; 59us; 193us; 66us; 193us; 67us; 193us; 70us; 193us; 71us; 193us; 73us; 193us; 74us; 193us; 78us; 193us; 79us; 193us; 82us; 193us; 83us; 193us; 85us; 193us; 88us; 193us; 92us; 193us; 99us; 193us; 101us; 193us; 103us; 193us; 105us; 193us; 114us; 193us; 116us; 193us; 120us; 193us; 123us; 193us; 126us; 193us; 128us; 193us; 130us; 193us; 132us; 193us; 159us; 193us; 160us; 193us; 161us; 193us; 162us; 193us; 163us; 193us; 164us; 193us; 165us; 193us; 166us; 193us; 167us; 193us; 168us; 193us; 169us; 193us; 170us; 193us; 171us; 193us; 179us; 193us; 180us; 193us; 181us; 193us; 182us; 193us; 183us; 193us; 184us; 193us; 185us; 193us; 187us; 193us; 188us; 193us; 199us; 193us; 202us; 193us; 205us; 193us; 0us; 65535us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 58us; 63us; 69us; 83us; 91us; 146us; 149us; 204us; 261us; 321us; 323us; 326us; 383us; 440us; 450us; 507us; 564us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 15us; 8us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 31us; 36us; 1us; 26us; 15us; 27us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 15us; 29us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 1us; 29us; 1us; 30us; 1us; 31us; 3us; 31us; 36us; 37us; 1us; 31us; 3us; 31us; 36us; 37us; 17us; 31us; 36us; 37us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 31us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 1us; 31us; 3us; 31us; 36us; 37us; 1us; 31us; 1us; 31us; 2us; 31us; 36us; 1us; 31us; 1us; 32us; 2us; 32us; 38us; 1us; 32us; 2us; 32us; 38us; 16us; 32us; 38us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 32us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 1us; 32us; 2us; 32us; 38us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 15us; 33us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 1us; 33us; 1us; 34us; 1us; 34us; 15us; 34us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 15us; 35us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 1us; 35us; 15us; 35us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 1us; 35us; 15us; 35us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 12us; 39us; 44us; 62us; 63us; 64us; 67us; 68us; 69us; 70us; 71us; 81us; 84us; 11us; 39us; 44us; 62us; 63us; 64us; 67us; 68us; 69us; 70us; 71us; 84us; 1us; 40us; 2us; 40us; 75us; 2us; 41us; 42us; 2us; 41us; 42us; 2us; 41us; 42us; 2us; 41us; 42us; 1us; 42us; 1us; 43us; 1us; 44us; 15us; 44us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 2us; 45us; 80us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 15us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 2us; 47us; 48us; 15us; 47us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 3us; 48us; 75us; 81us; 2us; 48us; 99us; 1us; 48us; 15us; 48us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 1us; 48us; 1us; 49us; 15us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 67us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 68us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 69us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 70us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 71us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 72us; 73us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 73us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 84us; 16us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 72us; 73us; 87us; 88us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 2us; 65us; 84us; 1us; 66us; 2us; 66us; 84us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; 2us; 75us; 81us; 1us; 75us; 1us; 76us; 2us; 76us; 84us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 81us; 2us; 81us; 84us; 1us; 81us; 2us; 82us; 83us; 2us; 82us; 84us; 1us; 83us; 1us; 84us; 1us; 84us; 1us; 86us; 1us; 88us; 1us; 88us; 1us; 89us; 1us; 90us; 2us; 91us; 94us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 58us; 60us; 63us; 65us; 69us; 71us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 143us; 145us; 161us; 163us; 166us; 168us; 184us; 186us; 188us; 190us; 194us; 196us; 200us; 218us; 234us; 236us; 240us; 242us; 244us; 247us; 249us; 251us; 254us; 256us; 259us; 276us; 292us; 294us; 297us; 299us; 301us; 303us; 305us; 307us; 323us; 325us; 327us; 329us; 345us; 347us; 349us; 351us; 353us; 355us; 357us; 373us; 375us; 391us; 393us; 409us; 411us; 413us; 415us; 417us; 419us; 432us; 444us; 446us; 449us; 452us; 455us; 458us; 461us; 463us; 465us; 467us; 483us; 486us; 488us; 490us; 492us; 494us; 510us; 513us; 529us; 533us; 536us; 538us; 554us; 556us; 558us; 574us; 590us; 606us; 622us; 638us; 654us; 670us; 686us; 702us; 718us; 734us; 750us; 766us; 782us; 798us; 814us; 830us; 846us; 862us; 877us; 893us; 909us; 926us; 928us; 930us; 932us; 934us; 936us; 938us; 940us; 942us; 944us; 946us; 948us; 950us; 952us; 954us; 956us; 958us; 960us; 963us; 965us; 968us; 970us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 989us; 991us; 993us; 996us; 998us; 1000us; 1002us; 1004us; 1006us; 1009us; 1011us; 1014us; 1017us; 1019us; 1021us; 1023us; 1025us; 1027us; 1029us; 1031us; 1033us; 1036us; 1038us; 1040us; 1042us; 1044us; 1046us; 1048us; 1050us; 1052us; |]
let _fsyacc_action_rows = 219
let _fsyacc_actionTableElements = [|4us; 16386us; 35us; 215us; 38us; 214us; 43us; 29us; 46us; 216us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 35us; 215us; 38us; 214us; 43us; 29us; 46us; 216us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 22us; 23us; 20us; 52us; 18us; 3us; 32768us; 1us; 22us; 23us; 20us; 52us; 18us; 3us; 32768us; 1us; 22us; 23us; 20us; 52us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 14us; 16392us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 23us; 20us; 52us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 23us; 20us; 52us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 55us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 52us; 30us; 1us; 32768us; 1us; 31us; 3us; 16400us; 35us; 215us; 38us; 214us; 46us; 216us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 3us; 16400us; 35us; 215us; 38us; 214us; 46us; 216us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 3us; 32768us; 35us; 215us; 38us; 214us; 46us; 216us; 0us; 16403us; 26us; 16405us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 35us; 215us; 37us; 65us; 38us; 214us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 77us; 45us; 85us; 46us; 216us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 1us; 32768us; 4us; 45us; 0us; 16404us; 26us; 16405us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 35us; 215us; 37us; 65us; 38us; 214us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 77us; 45us; 85us; 46us; 216us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16406us; 1us; 32768us; 7us; 49us; 26us; 16405us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 35us; 215us; 37us; 65us; 38us; 214us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 77us; 45us; 85us; 46us; 216us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16407us; 1us; 32768us; 7us; 52us; 26us; 16405us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 35us; 215us; 37us; 65us; 38us; 214us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 77us; 45us; 85us; 46us; 216us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 36us; 74us; 0us; 16410us; 15us; 32768us; 7us; 58us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 0us; 16411us; 17us; 32768us; 1us; 188us; 7us; 60us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16412us; 15us; 32768us; 7us; 62us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 15us; 32768us; 2us; 71us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 15us; 32768us; 2us; 70us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 23us; 32768us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 37us; 64us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 76us; 45us; 85us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 23us; 32768us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 37us; 65us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 77us; 45us; 85us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 1us; 32768us; 36us; 73us; 23us; 32768us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 37us; 64us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 76us; 45us; 85us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 23us; 32768us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 37us; 65us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 77us; 45us; 85us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16415us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 15us; 32768us; 2us; 83us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 15us; 32768us; 2us; 82us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 23us; 32768us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 37us; 64us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 76us; 45us; 85us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 23us; 32768us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 37us; 65us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 77us; 45us; 85us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16416us; 23us; 32768us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 37us; 64us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 76us; 45us; 85us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 1us; 32768us; 44us; 87us; 1us; 32768us; 1us; 88us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 15us; 32768us; 2us; 90us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 0us; 16417us; 1us; 32768us; 1us; 92us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 15us; 32768us; 2us; 94us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 1us; 32768us; 3us; 95us; 1us; 32768us; 48us; 114us; 1us; 32768us; 4us; 97us; 0us; 16418us; 1us; 32768us; 1us; 99us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 15us; 32768us; 7us; 101us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 15us; 32768us; 7us; 103us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 15us; 32768us; 2us; 105us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 23us; 32768us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 37us; 64us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 76us; 45us; 85us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 11us; 16423us; 2us; 198us; 5us; 202us; 9us; 120us; 26us; 172us; 27us; 174us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 182us; 32us; 183us; 33us; 173us; 10us; 16423us; 5us; 202us; 9us; 120us; 26us; 172us; 27us; 174us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 182us; 32us; 183us; 33us; 173us; 0us; 16424us; 1us; 16424us; 2us; 189us; 9us; 32768us; 1us; 187us; 10us; 190us; 22us; 209us; 39us; 211us; 51us; 218us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 1us; 32768us; 11us; 116us; 23us; 32768us; 1us; 188us; 3us; 43us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 37us; 64us; 39us; 211us; 40us; 128us; 41us; 135us; 42us; 59us; 44us; 76us; 45us; 85us; 47us; 91us; 49us; 98us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 1us; 16425us; 48us; 114us; 0us; 16426us; 0us; 16427us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 14us; 16428us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 1us; 16464us; 1us; 123us; 16us; 16469us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 1us; 32768us; 2us; 125us; 0us; 16429us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16430us; 16us; 32768us; 1us; 130us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 14us; 16431us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 131us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 1us; 16483us; 8us; 132us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 15us; 32768us; 2us; 134us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 0us; 16432us; 0us; 16433us; 3us; 16434us; 23us; 161us; 24us; 162us; 25us; 163us; 3us; 16435us; 23us; 161us; 24us; 162us; 25us; 163us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 9us; 16439us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 9us; 16440us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 9us; 16441us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 9us; 16442us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 9us; 16443us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 9us; 16444us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 15us; 32768us; 11us; 171us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 13us; 16445us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 14us; 16451us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 14us; 16452us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 14us; 16453us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 14us; 16454us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 14us; 16455us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 11us; 16456us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 14us; 32768us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 12us; 16457us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 15us; 32768us; 6us; 203us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 15us; 16471us; 8us; 205us; 13us; 185us; 14us; 184us; 15us; 164us; 16us; 165us; 17us; 166us; 18us; 167us; 19us; 168us; 20us; 169us; 21us; 159us; 22us; 160us; 23us; 161us; 24us; 162us; 25us; 163us; 34us; 170us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16446us; 0us; 16447us; 0us; 16448us; 3us; 32768us; 1us; 196us; 23us; 199us; 52us; 195us; 1us; 16449us; 5us; 202us; 3us; 32768us; 1us; 196us; 23us; 199us; 52us; 195us; 1us; 16450us; 5us; 202us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16458us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16459us; 3us; 32768us; 1us; 196us; 23us; 199us; 52us; 195us; 1us; 16460us; 5us; 202us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 0us; 16464us; 3us; 32768us; 1us; 196us; 23us; 199us; 52us; 195us; 2us; 32768us; 2us; 198us; 5us; 202us; 0us; 16465us; 11us; 32768us; 1us; 188us; 10us; 190us; 22us; 209us; 23us; 199us; 39us; 211us; 51us; 218us; 52us; 195us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 1us; 16466us; 5us; 202us; 0us; 16467us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16468us; 0us; 16470us; 16us; 32768us; 1us; 188us; 10us; 190us; 12us; 126us; 22us; 209us; 23us; 199us; 26us; 175us; 27us; 177us; 39us; 211us; 40us; 128us; 41us; 135us; 51us; 218us; 52us; 122us; 53us; 217us; 54us; 212us; 55us; 207us; 56us; 208us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 2us; 32768us; 54us; 213us; 55us; 210us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 19us; 21us; 22us; 26us; 30us; 34us; 37us; 39us; 56us; 71us; 72us; 74us; 78us; 80us; 84us; 87us; 88us; 91us; 92us; 94us; 95us; 97us; 99us; 103us; 105us; 107us; 108us; 112us; 114us; 116us; 117us; 118us; 120us; 124us; 125us; 152us; 154us; 155us; 182us; 183us; 185us; 212us; 213us; 215us; 242us; 243us; 244us; 246us; 247us; 263us; 264us; 282us; 283us; 299us; 300us; 301us; 303us; 305us; 322us; 339us; 355us; 371us; 395us; 419us; 421us; 445us; 469us; 470us; 472us; 474us; 491us; 508us; 524us; 540us; 564us; 588us; 589us; 613us; 615us; 617us; 634us; 650us; 651us; 653us; 670us; 686us; 688us; 690us; 692us; 693us; 695us; 712us; 728us; 745us; 761us; 778us; 794us; 818us; 819us; 820us; 821us; 822us; 834us; 845us; 846us; 848us; 858us; 860us; 884us; 886us; 887us; 888us; 905us; 920us; 922us; 939us; 941us; 942us; 959us; 960us; 977us; 992us; 1009us; 1011us; 1028us; 1044us; 1045us; 1046us; 1050us; 1054us; 1055us; 1056us; 1057us; 1067us; 1077us; 1087us; 1097us; 1107us; 1117us; 1133us; 1147us; 1162us; 1177us; 1192us; 1207us; 1222us; 1234us; 1249us; 1262us; 1278us; 1294us; 1311us; 1328us; 1345us; 1362us; 1379us; 1396us; 1413us; 1430us; 1447us; 1464us; 1481us; 1498us; 1515us; 1516us; 1517us; 1518us; 1522us; 1524us; 1528us; 1530us; 1547us; 1564us; 1581us; 1598us; 1615us; 1632us; 1649us; 1650us; 1667us; 1684us; 1685us; 1689us; 1691us; 1692us; 1693us; 1694us; 1695us; 1699us; 1702us; 1703us; 1715us; 1717us; 1718us; 1735us; 1736us; 1737us; 1754us; 1755us; 1756us; 1757us; 1760us; 1761us; 1762us; 1763us; 1764us; 1765us; 1766us; 1767us; 1768us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 6us; 7us; 9us; 7us; 5us; 5us; 1us; 1us; 4us; 5us; 1us; 3us; 4us; 2us; 2us; 6us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 4us; 3us; 5us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 22us; 23us; 23us; 24us; 24us; 24us; 25us; 26us; 27us; 27us; 27us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 16420us; 16421us; 16422us; 65535us; 65535us; 16424us; 65535us; 65535us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16446us; 16447us; 16448us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16458us; 65535us; 65535us; 16459us; 65535us; 65535us; 16461us; 16462us; 16463us; 16464us; 65535us; 65535us; 16465us; 65535us; 65535us; 16467us; 65535us; 16468us; 16470us; 65535us; 16472us; 16473us; 16474us; 65535us; 16475us; 16476us; 16477us; 16478us; 16479us; 16480us; 16481us; 16482us; 16483us; |]
let _fsyacc_reductions ()  =    [| 
# 546 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 555 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "CPar.fsy"
                                                               Prog _1 
                   )
# 52 "CPar.fsy"
                 : Absyn.program));
# 566 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               [] 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdecs));
# 576 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 58 "CPar.fsy"
                 : 'gentype_Topdecs));
# 588 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdec));
# 599 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               _1 
                   )
# 63 "CPar.fsy"
                 : 'gentype_Topdec));
# 610 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssignment in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "CPar.fsy"
                                                               VardecAndAssignment (first _1, second _1 ,third _1)  
                   )
# 64 "CPar.fsy"
                 : 'gentype_Topdec));
# 621 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 82 "CPar.fsy"
                 : 'gentype_Vardec));
# 633 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "CPar.fsy"
                                                       ((fst _2) _1, snd _2 , _4) 
                   )
# 87 "CPar.fsy"
                 : 'gentype_VardecAndAssignment));
# 646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 98 "CPar.fsy"
                 : 'gentype_Vardesc));
# 657 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 103 "CPar.fsy"
                 : 'gentype_Vardesc));
# 668 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               _2                                      
                   )
# 105 "CPar.fsy"
                 : 'gentype_Vardesc));
# 679 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 690 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 109 "CPar.fsy"
                 : 'gentype_Vardesc));
# 702 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 114 "CPar.fsy"
                 : 'gentype_Fundec));
# 715 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 116 "CPar.fsy"
                 : 'gentype_Fundec));
# 729 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               [] 
                   )
# 121 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 739 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               _1 
                   )
# 122 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 750 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               [_1]     
                   )
# 126 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 761 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 127 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 773 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               Block _2 
                   )
# 132 "CPar.fsy"
                 : 'gentype_Block));
# 784 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               [] 
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 794 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 806 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 818 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssignment in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                                  DecAndAssign (first _1, second _1, third _1) :: _3 
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 830 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               _1 
                   )
# 143 "CPar.fsy"
                 : 'gentype_Stmt));
# 841 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               _1 
                   )
# 144 "CPar.fsy"
                 : 'gentype_Stmt));
# 852 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 863 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               Return None          
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 873 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 884 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               _1                   
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 895 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 908 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 920 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 932 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_ExecCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                                        Switch(_3, _6) 
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 944 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                                        For(_3,_5,_7,_9)  
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 958 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtU));
# 971 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtU));
# 983 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 162 "CPar.fsy"
                 : 'gentype_StmtU));
# 995 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Access _1           
                   )
# 166 "CPar.fsy"
                 : 'gentype_Expr));
# 1006 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               _1                  
                   )
# 167 "CPar.fsy"
                 : 'gentype_Expr));
# 1017 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                                          [Case(_2,_4)] 
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExecCase));
# 1029 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_ExecCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExecCase));
# 1042 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               _1                  
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1053 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1065 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1077 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1088 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1099 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Print(_3 , _5)      
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1111 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1121 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1133 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1145 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1157 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1169 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1181 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1193 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1205 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1217 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1229 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1241 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1253 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Prim3(_1, _3, _5)   
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1266 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                                 Emun("Z++", _1, CstI 1 )   
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1277 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                                 Emun("Z+++", _1, CstI 2 )   
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1288 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                                 Emun("Z--", _1, CstI 1 )   
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1299 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                                 Emun("++Z", _2, CstI 1 )   
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1310 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                                 Emun("--Z", _2, CstI 1 )   
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1321 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                                 Emun("+=", _1, _3 ) 
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1333 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                                 Emun("-=", _1, _3 ) 
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1345 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                                 Emun("*=", _1, _3 ) 
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1357 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                                 Emun("/=", _1, _3 ) 
                   )
# 204 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1369 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                                 Emun("%=", _1, _3 ) 
                   )
# 205 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1381 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 206 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1393 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 207 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1405 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               CstI _1             
                   )
# 215 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1416 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               _2                  
                   )
# 216 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1427 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               Addr _2             
                   )
# 217 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1438 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                              ConstFloat(_1)     
                   )
# 218 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1449 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               ConstString(_1)     
                   )
# 219 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1460 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                                 ConstChar (_1)        
                   )
# 220 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1471 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               AccVar _1           
                   )
# 224 "CPar.fsy"
                 : 'gentype_Access));
# 1482 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               _2                  
                   )
# 225 "CPar.fsy"
                 : 'gentype_Access));
# 1493 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 226 "CPar.fsy"
                 : 'gentype_Access));
# 1504 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 227 "CPar.fsy"
                 : 'gentype_Access));
# 1515 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 228 "CPar.fsy"
                 : 'gentype_Access));
# 1527 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               []       
                   )
# 232 "CPar.fsy"
                 : 'gentype_Exprs));
# 1537 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               _1       
                   )
# 233 "CPar.fsy"
                 : 'gentype_Exprs));
# 1548 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               [_1]     
                   )
# 237 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1559 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 238 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1571 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "CPar.fsy"
                                                               _1       
                   )
# 242 "CPar.fsy"
                 : 'gentype_Const));
# 1582 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CPar.fsy"
                                                               _1       
                   )
# 243 "CPar.fsy"
                 : 'gentype_Const));
# 1593 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "CPar.fsy"
                                                               - _2     
                   )
# 244 "CPar.fsy"
                 : 'gentype_Const));
# 1604 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "CPar.fsy"
                                                               -1       
                   )
# 245 "CPar.fsy"
                 : 'gentype_Const));
# 1614 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                             _1       
                   )
# 249 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1625 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "CPar.fsy"
                                                             - _2     
                   )
# 250 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1636 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "CPar.fsy"
                                                               TypI     
                   )
# 253 "CPar.fsy"
                 : 'gentype_Type));
# 1646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CPar.fsy"
                                                               TypC     
                   )
# 254 "CPar.fsy"
                 : 'gentype_Type));
# 1656 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "CPar.fsy"
                                                               TypF     
                   )
# 255 "CPar.fsy"
                 : 'gentype_Type));
# 1666 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "CPar.fsy"
                                                               _1       
                   )
# 259 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1677 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 "CPar.fsy"
                                                               _1       
                   )
# 263 "CPar.fsy"
                 : 'gentype_ConstString));
# 1688 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "CPar.fsy"
                                                                          [Case(_2,_4)]    
                   )
# 267 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1700 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 "CPar.fsy"
                                                                          [Default(_3)]    
                   )
# 268 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1711 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 269 "CPar.fsy"
                 : 'gentype_StmtCase));
|]
# 1725 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 60;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
