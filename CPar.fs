// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 26 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | PLUSPLUS
  | MINUSMINUS
  | PLUSASSIGN
  | MINUSASSIGN
  | TIMESASSIGN
  | DIVASSIGN
  | MODASSIGN
  | PLUSPLUSPLUS
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | DO
  | FLOAT
  | SWITCH
  | CASE
  | FOR
  | DEFAULT
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTCHAR of (char)
  | CSTFLOAT of (float32)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_PLUSPLUS
    | TOKEN_MINUSMINUS
    | TOKEN_PLUSASSIGN
    | TOKEN_MINUSASSIGN
    | TOKEN_TIMESASSIGN
    | TOKEN_DIVASSIGN
    | TOKEN_MODASSIGN
    | TOKEN_PLUSPLUSPLUS
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_DO
    | TOKEN_FLOAT
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_FOR
    | TOKEN_DEFAULT
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTCHAR
    | TOKEN_CSTFLOAT
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssignment
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExecCase
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstFloat
    | NONTERM_Type
    | NONTERM_ConstChar
    | NONTERM_ConstString

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | NOT  -> 12 
  | SEQOR  -> 13 
  | SEQAND  -> 14 
  | EQ  -> 15 
  | NE  -> 16 
  | GT  -> 17 
  | LT  -> 18 
  | GE  -> 19 
  | LE  -> 20 
  | PLUS  -> 21 
  | MINUS  -> 22 
  | TIMES  -> 23 
  | DIV  -> 24 
  | MOD  -> 25 
  | PLUSPLUS  -> 26 
  | MINUSMINUS  -> 27 
  | PLUSASSIGN  -> 28 
  | MINUSASSIGN  -> 29 
  | TIMESASSIGN  -> 30 
  | DIVASSIGN  -> 31 
  | MODASSIGN  -> 32 
  | PLUSPLUSPLUS  -> 33 
  | CHAR  -> 34 
  | ELSE  -> 35 
  | IF  -> 36 
  | INT  -> 37 
  | NULL  -> 38 
  | PRINT  -> 39 
  | PRINTLN  -> 40 
  | RETURN  -> 41 
  | VOID  -> 42 
  | WHILE  -> 43 
  | DO  -> 44 
  | FLOAT  -> 45 
  | SWITCH  -> 46 
  | CASE  -> 47 
  | FOR  -> 48 
  | DEFAULT  -> 49 
  | CSTSTRING _ -> 50 
  | NAME _ -> 51 
  | CSTCHAR _ -> 52 
  | CSTFLOAT _ -> 53 
  | CSTINT _ -> 54 
  | CSTBOOL _ -> 55 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_NOT 
  | 13 -> TOKEN_SEQOR 
  | 14 -> TOKEN_SEQAND 
  | 15 -> TOKEN_EQ 
  | 16 -> TOKEN_NE 
  | 17 -> TOKEN_GT 
  | 18 -> TOKEN_LT 
  | 19 -> TOKEN_GE 
  | 20 -> TOKEN_LE 
  | 21 -> TOKEN_PLUS 
  | 22 -> TOKEN_MINUS 
  | 23 -> TOKEN_TIMES 
  | 24 -> TOKEN_DIV 
  | 25 -> TOKEN_MOD 
  | 26 -> TOKEN_PLUSPLUS 
  | 27 -> TOKEN_MINUSMINUS 
  | 28 -> TOKEN_PLUSASSIGN 
  | 29 -> TOKEN_MINUSASSIGN 
  | 30 -> TOKEN_TIMESASSIGN 
  | 31 -> TOKEN_DIVASSIGN 
  | 32 -> TOKEN_MODASSIGN 
  | 33 -> TOKEN_PLUSPLUSPLUS 
  | 34 -> TOKEN_CHAR 
  | 35 -> TOKEN_ELSE 
  | 36 -> TOKEN_IF 
  | 37 -> TOKEN_INT 
  | 38 -> TOKEN_NULL 
  | 39 -> TOKEN_PRINT 
  | 40 -> TOKEN_PRINTLN 
  | 41 -> TOKEN_RETURN 
  | 42 -> TOKEN_VOID 
  | 43 -> TOKEN_WHILE 
  | 44 -> TOKEN_DO 
  | 45 -> TOKEN_FLOAT 
  | 46 -> TOKEN_SWITCH 
  | 47 -> TOKEN_CASE 
  | 48 -> TOKEN_FOR 
  | 49 -> TOKEN_DEFAULT 
  | 50 -> TOKEN_CSTSTRING 
  | 51 -> TOKEN_NAME 
  | 52 -> TOKEN_CSTCHAR 
  | 53 -> TOKEN_CSTFLOAT 
  | 54 -> TOKEN_CSTINT 
  | 55 -> TOKEN_CSTBOOL 
  | 58 -> TOKEN_end_of_input
  | 56 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VardecAndAssignment 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_ExecCase 
    | 42 -> NONTERM_ExecCase 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_AtExprNotAccess 
    | 76 -> NONTERM_AtExprNotAccess 
    | 77 -> NONTERM_AtExprNotAccess 
    | 78 -> NONTERM_AtExprNotAccess 
    | 79 -> NONTERM_Access 
    | 80 -> NONTERM_Access 
    | 81 -> NONTERM_Access 
    | 82 -> NONTERM_Access 
    | 83 -> NONTERM_Access 
    | 84 -> NONTERM_Exprs 
    | 85 -> NONTERM_Exprs 
    | 86 -> NONTERM_Exprs1 
    | 87 -> NONTERM_Exprs1 
    | 88 -> NONTERM_Const 
    | 89 -> NONTERM_Const 
    | 90 -> NONTERM_Const 
    | 91 -> NONTERM_Const 
    | 92 -> NONTERM_ConstFloat 
    | 93 -> NONTERM_ConstFloat 
    | 94 -> NONTERM_Type 
    | 95 -> NONTERM_Type 
    | 96 -> NONTERM_Type 
    | 97 -> NONTERM_ConstChar 
    | 98 -> NONTERM_ConstString 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 58 
let _fsyacc_tagOfErrorTerminal = 56

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | PLUSPLUS  -> "PLUSPLUS" 
  | MINUSMINUS  -> "MINUSMINUS" 
  | PLUSASSIGN  -> "PLUSASSIGN" 
  | MINUSASSIGN  -> "MINUSASSIGN" 
  | TIMESASSIGN  -> "TIMESASSIGN" 
  | DIVASSIGN  -> "DIVASSIGN" 
  | MODASSIGN  -> "MODASSIGN" 
  | PLUSPLUSPLUS  -> "PLUSPLUSPLUS" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | DO  -> "DO" 
  | FLOAT  -> "FLOAT" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | FOR  -> "FOR" 
  | DEFAULT  -> "DEFAULT" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | PLUSPLUS  -> (null : System.Object) 
  | MINUSMINUS  -> (null : System.Object) 
  | PLUSASSIGN  -> (null : System.Object) 
  | MINUSASSIGN  -> (null : System.Object) 
  | TIMESASSIGN  -> (null : System.Object) 
  | DIVASSIGN  -> (null : System.Object) 
  | MODASSIGN  -> (null : System.Object) 
  | PLUSPLUSPLUS  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 15us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 82us; 63us; 83us; 63us; 85us; 63us; 105us; 63us; 116us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 108us; 13us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 85us; 86us; 105us; 106us; 116us; 117us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 107us; 83us; 109us; 52us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 78us; 81us; 79us; 80us; 82us; 57us; 83us; 57us; 85us; 57us; 88us; 89us; 92us; 93us; 99us; 100us; 101us; 102us; 103us; 104us; 105us; 57us; 116us; 57us; 120us; 121us; 123us; 156us; 126us; 127us; 128us; 129us; 130us; 153us; 132us; 133us; 157us; 136us; 158us; 137us; 159us; 138us; 160us; 139us; 161us; 140us; 162us; 141us; 163us; 142us; 164us; 143us; 165us; 144us; 166us; 145us; 167us; 146us; 175us; 147us; 176us; 148us; 177us; 149us; 178us; 150us; 179us; 151us; 180us; 152us; 181us; 154us; 183us; 153us; 184us; 153us; 198us; 155us; 201us; 156us; 2us; 65535us; 95us; 96us; 117us; 118us; 52us; 65535us; 16us; 112us; 43us; 112us; 46us; 112us; 49us; 112us; 52us; 112us; 59us; 112us; 66us; 112us; 67us; 112us; 70us; 112us; 71us; 112us; 73us; 112us; 74us; 112us; 78us; 112us; 79us; 112us; 82us; 112us; 83us; 112us; 85us; 112us; 88us; 112us; 92us; 112us; 99us; 112us; 101us; 112us; 103us; 112us; 105us; 112us; 116us; 112us; 120us; 112us; 123us; 112us; 126us; 112us; 128us; 112us; 130us; 113us; 132us; 112us; 157us; 112us; 158us; 112us; 159us; 112us; 160us; 112us; 161us; 112us; 162us; 112us; 163us; 112us; 164us; 112us; 165us; 112us; 166us; 112us; 167us; 112us; 175us; 112us; 176us; 112us; 177us; 112us; 178us; 112us; 179us; 112us; 180us; 112us; 181us; 112us; 183us; 113us; 184us; 113us; 198us; 112us; 201us; 112us; 54us; 65535us; 16us; 119us; 43us; 119us; 46us; 119us; 49us; 119us; 52us; 119us; 59us; 119us; 66us; 119us; 67us; 119us; 70us; 119us; 71us; 119us; 73us; 119us; 74us; 119us; 78us; 119us; 79us; 119us; 82us; 119us; 83us; 119us; 85us; 119us; 88us; 119us; 92us; 119us; 99us; 119us; 101us; 119us; 103us; 119us; 105us; 119us; 114us; 115us; 116us; 119us; 120us; 119us; 123us; 119us; 126us; 119us; 128us; 119us; 130us; 119us; 132us; 119us; 157us; 119us; 158us; 119us; 159us; 119us; 160us; 119us; 161us; 119us; 162us; 119us; 163us; 119us; 164us; 119us; 165us; 119us; 166us; 119us; 167us; 119us; 175us; 119us; 176us; 119us; 177us; 119us; 178us; 119us; 179us; 119us; 180us; 119us; 181us; 119us; 183us; 119us; 184us; 119us; 195us; 197us; 198us; 119us; 201us; 119us; 57us; 65535us; 16us; 111us; 43us; 111us; 46us; 111us; 49us; 111us; 52us; 111us; 59us; 111us; 66us; 111us; 67us; 111us; 70us; 111us; 71us; 111us; 73us; 111us; 74us; 111us; 78us; 111us; 79us; 111us; 82us; 111us; 83us; 111us; 85us; 111us; 88us; 111us; 92us; 111us; 99us; 111us; 101us; 111us; 103us; 111us; 105us; 111us; 116us; 111us; 120us; 111us; 123us; 111us; 126us; 111us; 128us; 111us; 130us; 110us; 132us; 111us; 157us; 111us; 158us; 111us; 159us; 111us; 160us; 111us; 161us; 111us; 162us; 111us; 163us; 111us; 164us; 111us; 165us; 111us; 166us; 111us; 167us; 111us; 171us; 172us; 173us; 174us; 175us; 111us; 176us; 111us; 177us; 111us; 178us; 111us; 179us; 111us; 180us; 111us; 181us; 111us; 183us; 111us; 184us; 110us; 186us; 187us; 192us; 193us; 195us; 196us; 198us; 111us; 201us; 111us; 1us; 65535us; 123us; 124us; 2us; 65535us; 123us; 200us; 201us; 202us; 54us; 65535us; 16us; 182us; 43us; 182us; 46us; 182us; 49us; 182us; 52us; 182us; 59us; 182us; 66us; 182us; 67us; 182us; 70us; 182us; 71us; 182us; 73us; 182us; 74us; 182us; 78us; 182us; 79us; 182us; 82us; 182us; 83us; 182us; 85us; 182us; 88us; 182us; 92us; 182us; 99us; 182us; 101us; 182us; 103us; 182us; 105us; 182us; 114us; 182us; 116us; 182us; 120us; 182us; 123us; 182us; 126us; 182us; 128us; 182us; 130us; 182us; 132us; 182us; 157us; 182us; 158us; 182us; 159us; 182us; 160us; 182us; 161us; 182us; 162us; 182us; 163us; 182us; 164us; 182us; 165us; 182us; 166us; 182us; 167us; 182us; 175us; 182us; 176us; 182us; 177us; 182us; 178us; 182us; 179us; 182us; 180us; 182us; 181us; 182us; 183us; 182us; 184us; 182us; 195us; 182us; 198us; 182us; 201us; 182us; 54us; 65535us; 16us; 188us; 43us; 188us; 46us; 188us; 49us; 188us; 52us; 188us; 59us; 188us; 66us; 188us; 67us; 188us; 70us; 188us; 71us; 188us; 73us; 188us; 74us; 188us; 78us; 188us; 79us; 188us; 82us; 188us; 83us; 188us; 85us; 188us; 88us; 188us; 92us; 188us; 99us; 188us; 101us; 188us; 103us; 188us; 105us; 188us; 114us; 188us; 116us; 188us; 120us; 188us; 123us; 188us; 126us; 188us; 128us; 188us; 130us; 188us; 132us; 188us; 157us; 188us; 158us; 188us; 159us; 188us; 160us; 188us; 161us; 188us; 162us; 188us; 163us; 188us; 164us; 188us; 165us; 188us; 166us; 188us; 167us; 188us; 175us; 188us; 176us; 188us; 177us; 188us; 178us; 188us; 179us; 188us; 180us; 188us; 181us; 188us; 183us; 188us; 184us; 188us; 195us; 188us; 198us; 188us; 201us; 188us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; 54us; 65535us; 16us; 190us; 43us; 190us; 46us; 190us; 49us; 190us; 52us; 190us; 59us; 190us; 66us; 190us; 67us; 190us; 70us; 190us; 71us; 190us; 73us; 190us; 74us; 190us; 78us; 190us; 79us; 190us; 82us; 190us; 83us; 190us; 85us; 190us; 88us; 190us; 92us; 190us; 99us; 190us; 101us; 190us; 103us; 190us; 105us; 190us; 114us; 190us; 116us; 190us; 120us; 190us; 123us; 190us; 126us; 190us; 128us; 190us; 130us; 190us; 132us; 190us; 157us; 190us; 158us; 190us; 159us; 190us; 160us; 190us; 161us; 190us; 162us; 190us; 163us; 190us; 164us; 190us; 165us; 190us; 166us; 190us; 167us; 190us; 175us; 190us; 176us; 190us; 177us; 190us; 178us; 190us; 179us; 190us; 180us; 190us; 181us; 190us; 183us; 190us; 184us; 190us; 195us; 190us; 198us; 190us; 201us; 190us; 54us; 65535us; 16us; 189us; 43us; 189us; 46us; 189us; 49us; 189us; 52us; 189us; 59us; 189us; 66us; 189us; 67us; 189us; 70us; 189us; 71us; 189us; 73us; 189us; 74us; 189us; 78us; 189us; 79us; 189us; 82us; 189us; 83us; 189us; 85us; 189us; 88us; 189us; 92us; 189us; 99us; 189us; 101us; 189us; 103us; 189us; 105us; 189us; 114us; 189us; 116us; 189us; 120us; 189us; 123us; 189us; 126us; 189us; 128us; 189us; 130us; 189us; 132us; 189us; 157us; 189us; 158us; 189us; 159us; 189us; 160us; 189us; 161us; 189us; 162us; 189us; 163us; 189us; 164us; 189us; 165us; 189us; 166us; 189us; 167us; 189us; 175us; 189us; 176us; 189us; 177us; 189us; 178us; 189us; 179us; 189us; 180us; 189us; 181us; 189us; 183us; 189us; 184us; 189us; 195us; 189us; 198us; 189us; 201us; 189us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 58us; 63us; 69us; 83us; 91us; 144us; 147us; 200us; 255us; 313us; 315us; 318us; 373us; 428us; 438us; 493us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 14us; 8us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 31us; 36us; 1us; 26us; 14us; 27us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 14us; 29us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 1us; 29us; 1us; 30us; 1us; 31us; 3us; 31us; 36us; 37us; 1us; 31us; 3us; 31us; 36us; 37us; 16us; 31us; 36us; 37us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 14us; 31us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 1us; 31us; 3us; 31us; 36us; 37us; 1us; 31us; 1us; 31us; 2us; 31us; 36us; 1us; 31us; 1us; 32us; 2us; 32us; 38us; 1us; 32us; 2us; 32us; 38us; 15us; 32us; 38us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 14us; 32us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 1us; 32us; 2us; 32us; 38us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 14us; 33us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 1us; 33us; 1us; 34us; 1us; 34us; 14us; 34us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 14us; 35us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 1us; 35us; 14us; 35us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 1us; 35us; 14us; 35us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 12us; 39us; 44us; 61us; 62us; 63us; 66us; 67us; 68us; 69us; 70us; 80us; 83us; 11us; 39us; 44us; 61us; 62us; 63us; 66us; 67us; 68us; 69us; 70us; 83us; 1us; 40us; 2us; 40us; 74us; 2us; 41us; 42us; 2us; 41us; 42us; 2us; 41us; 42us; 2us; 41us; 42us; 1us; 42us; 1us; 43us; 1us; 44us; 14us; 44us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 2us; 45us; 79us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 14us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 2us; 47us; 48us; 14us; 47us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 3us; 48us; 74us; 80us; 2us; 48us; 98us; 1us; 48us; 14us; 48us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 1us; 48us; 1us; 49us; 14us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 14us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 14us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 66us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 67us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 68us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 69us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 71us; 72us; 13us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 83us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 71us; 72us; 86us; 87us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 2us; 64us; 83us; 1us; 65us; 2us; 65us; 83us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 2us; 74us; 80us; 1us; 74us; 1us; 75us; 2us; 75us; 83us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 2us; 80us; 83us; 1us; 80us; 2us; 81us; 82us; 2us; 81us; 83us; 1us; 82us; 1us; 83us; 1us; 83us; 1us; 85us; 1us; 87us; 1us; 87us; 1us; 88us; 1us; 89us; 2us; 90us; 93us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 57us; 59us; 62us; 64us; 68us; 70us; 74us; 76us; 79us; 81us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 105us; 107us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 132us; 134us; 136us; 138us; 142us; 144us; 159us; 161us; 164us; 166us; 181us; 183us; 185us; 187us; 191us; 193us; 197us; 214us; 229us; 231us; 235us; 237us; 239us; 242us; 244us; 246us; 249us; 251us; 254us; 270us; 285us; 287us; 290us; 292us; 294us; 296us; 298us; 300us; 315us; 317us; 319us; 321us; 336us; 338us; 340us; 342us; 344us; 346us; 348us; 363us; 365us; 380us; 382us; 397us; 399us; 401us; 403us; 405us; 407us; 420us; 432us; 434us; 437us; 440us; 443us; 446us; 449us; 451us; 453us; 455us; 470us; 473us; 475us; 477us; 479us; 481us; 496us; 499us; 514us; 518us; 521us; 523us; 538us; 540us; 542us; 557us; 572us; 587us; 602us; 617us; 632us; 647us; 662us; 677us; 692us; 707us; 722us; 737us; 752us; 767us; 782us; 797us; 811us; 826us; 841us; 857us; 859us; 861us; 863us; 865us; 867us; 869us; 871us; 873us; 875us; 877us; 879us; 881us; 883us; 885us; 887us; 890us; 892us; 895us; 897us; 899us; 901us; 903us; 905us; 907us; 909us; 911us; 913us; 916us; 918us; 920us; 923us; 925us; 927us; 929us; 931us; 933us; 936us; 938us; 941us; 944us; 946us; 948us; 950us; 952us; 954us; 956us; 958us; 960us; 963us; 965us; 967us; 969us; 971us; 973us; 975us; 977us; 979us; |]
let _fsyacc_action_rows = 215
let _fsyacc_actionTableElements = [|4us; 16386us; 34us; 211us; 37us; 210us; 42us; 29us; 45us; 212us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 34us; 211us; 37us; 210us; 42us; 29us; 45us; 212us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 22us; 23us; 20us; 51us; 18us; 3us; 32768us; 1us; 22us; 23us; 20us; 51us; 18us; 3us; 32768us; 1us; 22us; 23us; 20us; 51us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 13us; 16392us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 23us; 20us; 51us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 23us; 20us; 51us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 54us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 51us; 30us; 1us; 32768us; 1us; 31us; 3us; 16400us; 34us; 211us; 37us; 210us; 45us; 212us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 3us; 16400us; 34us; 211us; 37us; 210us; 45us; 212us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 3us; 32768us; 34us; 211us; 37us; 210us; 45us; 212us; 0us; 16403us; 26us; 16405us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 34us; 211us; 36us; 65us; 37us; 210us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 77us; 44us; 85us; 45us; 212us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 1us; 32768us; 4us; 45us; 0us; 16404us; 26us; 16405us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 34us; 211us; 36us; 65us; 37us; 210us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 77us; 44us; 85us; 45us; 212us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16406us; 1us; 32768us; 7us; 49us; 26us; 16405us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 34us; 211us; 36us; 65us; 37us; 210us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 77us; 44us; 85us; 45us; 212us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16407us; 1us; 32768us; 7us; 52us; 26us; 16405us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 34us; 211us; 36us; 65us; 37us; 210us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 77us; 44us; 85us; 45us; 212us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 35us; 74us; 0us; 16410us; 14us; 32768us; 7us; 58us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 0us; 16411us; 17us; 32768us; 1us; 184us; 7us; 60us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16412us; 14us; 32768us; 7us; 62us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 14us; 32768us; 2us; 71us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 14us; 32768us; 2us; 70us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 23us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 36us; 64us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 23us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 36us; 65us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 1us; 32768us; 35us; 73us; 23us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 36us; 64us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 23us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 36us; 65us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16415us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 14us; 32768us; 2us; 83us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 14us; 32768us; 2us; 82us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 23us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 36us; 64us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 23us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 36us; 65us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16416us; 23us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 36us; 64us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 1us; 32768us; 43us; 87us; 1us; 32768us; 1us; 88us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 14us; 32768us; 2us; 90us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 0us; 16417us; 1us; 32768us; 1us; 92us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 14us; 32768us; 2us; 94us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 1us; 32768us; 3us; 95us; 1us; 32768us; 47us; 114us; 1us; 32768us; 4us; 97us; 0us; 16418us; 1us; 32768us; 1us; 99us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 14us; 32768us; 7us; 101us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 14us; 32768us; 7us; 103us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 14us; 32768us; 2us; 105us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 23us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 36us; 64us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 11us; 16423us; 2us; 194us; 5us; 198us; 9us; 120us; 26us; 168us; 27us; 170us; 28us; 175us; 29us; 176us; 30us; 177us; 31us; 178us; 32us; 179us; 33us; 169us; 10us; 16423us; 5us; 198us; 9us; 120us; 26us; 168us; 27us; 170us; 28us; 175us; 29us; 176us; 30us; 177us; 31us; 178us; 32us; 179us; 33us; 169us; 0us; 16424us; 1us; 16424us; 2us; 185us; 9us; 32768us; 1us; 183us; 10us; 186us; 22us; 205us; 38us; 207us; 50us; 214us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 1us; 32768us; 11us; 116us; 23us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 36us; 64us; 38us; 207us; 39us; 128us; 40us; 135us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 91us; 48us; 98us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 1us; 16425us; 47us; 114us; 0us; 16426us; 0us; 16427us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 13us; 16428us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 1us; 16463us; 1us; 123us; 16us; 16468us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 1us; 32768us; 2us; 125us; 0us; 16429us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16430us; 16us; 32768us; 1us; 130us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 13us; 16431us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 131us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 1us; 16482us; 8us; 132us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 14us; 32768us; 2us; 134us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 0us; 16432us; 0us; 16433us; 3us; 16434us; 23us; 159us; 24us; 160us; 25us; 161us; 3us; 16435us; 23us; 159us; 24us; 160us; 25us; 161us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 9us; 16439us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 9us; 16440us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 9us; 16441us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 9us; 16442us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 9us; 16443us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 9us; 16444us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 13us; 16450us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 13us; 16451us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 13us; 16452us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 13us; 16453us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 13us; 16454us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 11us; 16455us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 13us; 32768us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 12us; 16456us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 14us; 32768us; 6us; 199us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 14us; 16470us; 8us; 201us; 13us; 181us; 14us; 180us; 15us; 162us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16445us; 0us; 16446us; 0us; 16447us; 3us; 32768us; 1us; 192us; 23us; 195us; 51us; 191us; 1us; 16448us; 5us; 198us; 3us; 32768us; 1us; 192us; 23us; 195us; 51us; 191us; 1us; 16449us; 5us; 198us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16457us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16458us; 3us; 32768us; 1us; 192us; 23us; 195us; 51us; 191us; 1us; 16459us; 5us; 198us; 0us; 16460us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 3us; 32768us; 1us; 192us; 23us; 195us; 51us; 191us; 2us; 32768us; 2us; 194us; 5us; 198us; 0us; 16464us; 11us; 32768us; 1us; 184us; 10us; 186us; 22us; 205us; 23us; 195us; 38us; 207us; 50us; 214us; 51us; 191us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 1us; 16465us; 5us; 198us; 0us; 16466us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16467us; 0us; 16469us; 16us; 32768us; 1us; 184us; 10us; 186us; 12us; 126us; 22us; 205us; 23us; 195us; 26us; 171us; 27us; 173us; 38us; 207us; 39us; 128us; 40us; 135us; 50us; 214us; 51us; 122us; 52us; 213us; 53us; 208us; 54us; 203us; 55us; 204us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 2us; 32768us; 53us; 209us; 54us; 206us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 19us; 21us; 22us; 26us; 30us; 34us; 37us; 39us; 56us; 70us; 71us; 73us; 77us; 79us; 83us; 86us; 87us; 90us; 91us; 93us; 94us; 96us; 98us; 102us; 104us; 106us; 107us; 111us; 113us; 115us; 116us; 117us; 119us; 123us; 124us; 151us; 153us; 154us; 181us; 182us; 184us; 211us; 212us; 214us; 241us; 242us; 243us; 245us; 246us; 261us; 262us; 280us; 281us; 296us; 297us; 298us; 300us; 302us; 319us; 336us; 351us; 366us; 390us; 414us; 416us; 440us; 464us; 465us; 467us; 469us; 486us; 503us; 518us; 533us; 557us; 581us; 582us; 606us; 608us; 610us; 627us; 642us; 643us; 645us; 662us; 677us; 679us; 681us; 683us; 684us; 686us; 703us; 718us; 735us; 750us; 767us; 782us; 806us; 807us; 808us; 809us; 810us; 822us; 833us; 834us; 836us; 846us; 848us; 872us; 874us; 875us; 876us; 893us; 907us; 909us; 926us; 928us; 929us; 946us; 947us; 964us; 978us; 995us; 997us; 1014us; 1029us; 1030us; 1031us; 1035us; 1039us; 1040us; 1041us; 1042us; 1052us; 1062us; 1072us; 1082us; 1092us; 1102us; 1116us; 1130us; 1144us; 1158us; 1172us; 1184us; 1198us; 1211us; 1226us; 1241us; 1258us; 1275us; 1292us; 1309us; 1326us; 1343us; 1360us; 1377us; 1394us; 1411us; 1428us; 1429us; 1430us; 1431us; 1435us; 1437us; 1441us; 1443us; 1460us; 1477us; 1494us; 1511us; 1528us; 1545us; 1562us; 1563us; 1580us; 1597us; 1598us; 1602us; 1604us; 1605us; 1606us; 1607us; 1608us; 1612us; 1615us; 1616us; 1628us; 1630us; 1631us; 1648us; 1649us; 1650us; 1667us; 1668us; 1669us; 1670us; 1673us; 1674us; 1675us; 1676us; 1677us; 1678us; 1679us; 1680us; 1681us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 6us; 7us; 9us; 7us; 5us; 5us; 1us; 1us; 4us; 5us; 1us; 3us; 4us; 2us; 2us; 6us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 22us; 23us; 23us; 24us; 24us; 24us; 25us; 26us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 16420us; 16421us; 16422us; 65535us; 65535us; 16424us; 65535us; 65535us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16445us; 16446us; 16447us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16457us; 65535us; 65535us; 16458us; 65535us; 65535us; 16460us; 16461us; 16462us; 16463us; 65535us; 65535us; 16464us; 65535us; 65535us; 16466us; 65535us; 16467us; 16469us; 65535us; 16471us; 16472us; 16473us; 65535us; 16474us; 16475us; 16476us; 16477us; 16478us; 16479us; 16480us; 16481us; 16482us; |]
let _fsyacc_reductions ()  =    [| 
# 535 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 544 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               Prog _1 
                   )
# 51 "CPar.fsy"
                 : Absyn.program));
# 555 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               [] 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdecs));
# 565 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdecs));
# 577 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdec));
# 588 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               _1 
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdec));
# 599 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssignment in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               VardecAndAssignment (first _1, second _1 ,third _1)  
                   )
# 63 "CPar.fsy"
                 : 'gentype_Topdec));
# 610 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 81 "CPar.fsy"
                 : 'gentype_Vardec));
# 622 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "CPar.fsy"
                                                       ((fst _2) _1, snd _2 , _4) 
                   )
# 86 "CPar.fsy"
                 : 'gentype_VardecAndAssignment));
# 635 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 97 "CPar.fsy"
                 : 'gentype_Vardesc));
# 646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 102 "CPar.fsy"
                 : 'gentype_Vardesc));
# 657 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "CPar.fsy"
                                                               _2                                      
                   )
# 104 "CPar.fsy"
                 : 'gentype_Vardesc));
# 668 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 106 "CPar.fsy"
                 : 'gentype_Vardesc));
# 679 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 108 "CPar.fsy"
                 : 'gentype_Vardesc));
# 691 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Fundec));
# 704 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 115 "CPar.fsy"
                 : 'gentype_Fundec));
# 718 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               [] 
                   )
# 120 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 728 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               _1 
                   )
# 121 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 739 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               [_1]     
                   )
# 125 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 750 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 126 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 762 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               Block _2 
                   )
# 131 "CPar.fsy"
                 : 'gentype_Block));
# 773 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               [] 
                   )
# 135 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 783 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 795 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 807 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssignment in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                                  DecAndAssign (first _1, second _1, third _1) :: _3 
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 819 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               _1 
                   )
# 142 "CPar.fsy"
                 : 'gentype_Stmt));
# 830 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               _1 
                   )
# 143 "CPar.fsy"
                 : 'gentype_Stmt));
# 841 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 852 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               Return None          
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 862 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 873 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               _1                   
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 884 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 897 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 909 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 921 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_ExecCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                                        Switch(_3, _6) 
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 933 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                                        For(_3,_5,_7,_9)  
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 947 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtU));
# 960 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtU));
# 972 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtU));
# 984 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               Access _1           
                   )
# 165 "CPar.fsy"
                 : 'gentype_Expr));
# 995 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               _1                  
                   )
# 166 "CPar.fsy"
                 : 'gentype_Expr));
# 1006 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                                          [Case(_2,_4)] 
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExecCase));
# 1018 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_ExecCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExecCase));
# 1031 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               _1                  
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1042 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1054 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1066 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1077 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1088 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Print(_3 , _5)      
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1100 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1110 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1122 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1134 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1146 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1158 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1170 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1182 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1194 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1206 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1218 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1230 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1242 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                                 Emun("Z++", _1, CstI 1 )   
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1253 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                                 Emun("Z+++", _1, CstI 2 )   
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1264 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                                 Emun("Z--", _1, CstI 1 )   
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1275 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                                 Emun("++Z", _2, CstI 1 )   
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1286 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                                 Emun("--Z", _2, CstI 1 )   
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1297 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                                 Emun("+=", _1, _3 ) 
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1309 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                                 Emun("-=", _1, _3 ) 
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1321 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                                 Emun("*=", _1, _3 ) 
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1333 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                                 Emun("/=", _1, _3 ) 
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1345 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                                 Emun("%=", _1, _3 ) 
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1357 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 204 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1369 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 205 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1381 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               CstI _1             
                   )
# 213 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1392 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               _2                  
                   )
# 214 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1403 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               Addr _2             
                   )
# 215 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1414 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                              ConstFloat(_1)     
                   )
# 216 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1425 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               ConstString(_1)     
                   )
# 217 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1436 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                                 ConstChar (_1)        
                   )
# 218 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1447 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               AccVar _1           
                   )
# 222 "CPar.fsy"
                 : 'gentype_Access));
# 1458 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               _2                  
                   )
# 223 "CPar.fsy"
                 : 'gentype_Access));
# 1469 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 224 "CPar.fsy"
                 : 'gentype_Access));
# 1480 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 225 "CPar.fsy"
                 : 'gentype_Access));
# 1491 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 226 "CPar.fsy"
                 : 'gentype_Access));
# 1503 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               []       
                   )
# 230 "CPar.fsy"
                 : 'gentype_Exprs));
# 1513 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               _1       
                   )
# 231 "CPar.fsy"
                 : 'gentype_Exprs));
# 1524 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               [_1]     
                   )
# 235 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1535 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 236 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1547 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               _1       
                   )
# 240 "CPar.fsy"
                 : 'gentype_Const));
# 1558 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                               _1       
                   )
# 241 "CPar.fsy"
                 : 'gentype_Const));
# 1569 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "CPar.fsy"
                                                               - _2     
                   )
# 242 "CPar.fsy"
                 : 'gentype_Const));
# 1580 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CPar.fsy"
                                                               -1       
                   )
# 243 "CPar.fsy"
                 : 'gentype_Const));
# 1590 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "CPar.fsy"
                                                             _1       
                   )
# 247 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1601 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "CPar.fsy"
                                                             - _2     
                   )
# 248 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1612 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "CPar.fsy"
                                                               TypI     
                   )
# 251 "CPar.fsy"
                 : 'gentype_Type));
# 1622 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "CPar.fsy"
                                                               TypC     
                   )
# 252 "CPar.fsy"
                 : 'gentype_Type));
# 1632 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "CPar.fsy"
                                                               TypF     
                   )
# 253 "CPar.fsy"
                 : 'gentype_Type));
# 1642 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               _1       
                   )
# 257 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1653 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "CPar.fsy"
                                                               _1       
                   )
# 261 "CPar.fsy"
                 : 'gentype_ConstString));
|]
# 1665 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 59;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
